# -*- coding: utf-8 -*-
"""10 - User Defined Functions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fZ15AnHzOvTF1USiylXoyNmp-APig8uV

#BEGINNER
"""

# Add two numbers
def add(num1, num2):
    return num1+num2
result = add(2, 3)
print(result)

# Even or odd
def Even_or_odd(num):
  if num % 2 == 0:
    return "Even"
  else:
    return "Odd"
result = Even_or_odd(0)
print(result)

# Maximum of Two numbers
def maxi(num1, num2):
  if num1 > num2:
    return num1
  else:
    return num2
result = maxi(10, 3)
print(result)

# Factorial od given number
num = int(input("Enter your Number : "))
def factorial (num):
  fact = 1
  for i in range(1, num+1):
    fact = fact * i
  return fact
factorial(num)

# Convert celcius to fahrenheit
value = int(input("Enter your celsius value : "))
def celcius_to_fahrenheit(value):
  fahrenheit = (value * 9/ 5) + 32
  return fahrenheit
celcius_to_fahrenheit(value)

# Palindrome or not
u_string = str(input("Enter your String : "))
def is_palindrome(u_string):
  if u_string == u_string[::-1]:
    return "Given string is palindrom"
  else:
    return "Not palindrome"
is_palindrome(u_string)

# Area of circle
circle_radius = float(input("Enter the Circle Radius : "))
def circle_area(circle_radius):
  area = 3.14 * circle_radius ** 2
  return round(area, 2)
circle_area(circle_radius)

# Reverse a String
string = str(input("Enter your String : "))
def reverse(string):
  reverse = string[::-1]
  return reverse
reverse(string)

# Count vovels in given string
string = str(input("Enter your String : "))
def count_vovels(string):
  count = 0
  vovels = "aeiouAEIOU"
  for i in string:
    if i in vovels:
      count = count + 1
  return count
count_vovels(string)

"""#INTERMEDIATE"""

# Find GCD of two numbers
num1 = int(input("Enter the number 1 : "))
num2 = int(input("Enter the number 2 : "))
def gcd(num1, num2):
  if num2 == 0:
    return num1
  else:
    return gcd(num2, num1 % num2)
gcd(num1, num2)

# Frequency of charachter
char = str(input("Enter your word : "))
def fre_char(char):
  freq = {}
  for i in char:
    freq[i] = freq.get(i, 0) + 1
  return freq
fre_char(char)

# Merge tow sorted list
def merge_sort(list1, list2):
  return sorted(list1+list2)
list1 = [1, 2, 3, 4]
list2 = [5, 6, 7, 8]
print(merge_sort(list1, list2))

# Fibbonacci sequence
num = int(input("Enter you want : "))
def fibonacci(num):
  series = [0, 1]
  for i in range(2, num):
    series.append(series[i - 1] + series[i -2])
  return series
print(fibonacci(num))

# Capitalize the first letter of user words
string = str(input("Enter you sentences : "))
def capitalize(string):
  words = string.split()
  result = []
  for word in words:
    if len(words) > 1:
      result.append(word[0].upper() + word[1:-1])

    else:
      result.append(word.upper())
  return ' '.join(result)
capitalize(string)

# remove repeated elements in list
def non_repeated_value(lst):
  listu = []
  for i in lst:
    if i not in listu:
      listu.append(i)
  return listu
lst = [1, 2, 3, 4, 1, 2, 3, 1, 1, 2, 1, "m", "o", "h", "h", "a", "g", "q", "a", "s"]
non_repeated_value(lst)

# Intersection of 2 list
list1 = ["a", "b", "c", "d", 1, 2, 3, 4, 5]
list2 = [2, 3, 4, "v", "c", "b"]
result = []
def intersection(list1, list2):
  for i in list1:
    for j in list2:
      if i == j:
        result.append(i)
  return result
intersection(list1, list2)

# Find the Second largest number in the list
lister = [2, 3, 1, 4, 1, 55, 3, 22, 11, 12, 112, 121, 12, 11, 123, 123, 453, 222]
def secondl(lister):
  sorted = lister.sort()
  return lister[-2]
secondl(lister)