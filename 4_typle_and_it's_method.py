# -*- coding: utf-8 -*-
"""4 - Typle and it's method.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aCW5DjOWagcnbW7mphsYTevht6mwybl1
"""



"""#BEGINNER

###Tuple creation
"""

my_tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
print(my_tuple)

"""###Accessing tuple"""

print(my_tuple[0])
print(my_tuple[1])
print(my_tuple[3:])

"""###Negative index"""

print(my_tuple[-1])
print(my_tuple[:-1])
print(my_tuple[::-1])

"""###Length of tuple and concatination

"""

print(len(my_tuple))
my_tuple2 = (11, 12, 13, 14, 15, 16)
tuples = my_tuple + my_tuple2
print(tuples)

"""###Slicing a tuple"""

print(my_tuple[:10])
print(my_tuple[11:])
print(my_tuple[1:10:2])
print(tuples[1::2])

"""###Tuples count method"""

print(my_tuple.count(2))
print(tuples.count(2))
tuples = tuples + (2,)
print(tuples.count(2))

"""###Tuple index"""

print(my_tuple.index(2))
print(my_tuple.index(1))
print(my_tuple.index(4))
print(my_tuple.index(5))

"""###Tuple Unpacking"""

a, b, c, d, e, f, g, h, i, j = my_tuple
print(a, b, c, d, e, f, g, h, i, j)
print(a)
print(b)
print(c)
print(d)
print(e)
print(f)
print(g)

"""###Checking Element in *tuple*"""

print(10 in my_tuple)

"""#Intermediate

###Nested Tuple
"""

nested = (1, 2, 3, (4, 5), 7, (8, 9), 10)
print(nested[2])
print(nested[3][0])
print(nested[5][1])
print(nested[6])
print(nested[0:])
print(nested[5:])

"""###Immutability of tuple"""

#nested[0] = 12
print(nested)

"""###Using tuuples as Dictionary Keys"""

nested = (1, 2, 3, 4)
my = {nested : "hello"}
print(my)

"""###Revering a tuple"""

nested[::-1]

"""###Zipping Tuples"""

nested = (1, 2, 3, 4, 5)
nes = ("a", "b", "c", "d", "e")
mass = list(zip(nested, nes))
print(mass)

"""###Finding max and min"""

nested = (1, 2, 3, 4, 5)
print(max(nested))
print(min(nested))

"""###Tuple comprehension"""

nested = tuple(x*5 for x in range(1, 6))
print(nested)

"""###Unpacking Tuple"""

nested = (1, 2, 3, 4, 5, 6, 7)
a, b, *mohan = nested
print(a, b, mohan)

"""###nested tuple unpacking"""

nested = (1, 2, 3, 4, (5, 6, 7))
a, *b, (c1, c2, c3) = nested
print(a, b, c1, c2, c3)

"""###Count and Index"""

nested = (1, 2, 1, 3, 5, 6, 7, 5, 3, 2, 1, 1)
print(nested)
input = int(input("Enter your value"))
count = nested.count(input)
index = nested.index(input)
print(f"The Count of given number is : {count} and the Index of given number is :{index}")